import{i as c,c as a,F as f,t as p,r as v}from"./vendor.777a4d87.js";const h=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const n of e.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function o(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?e.credentials="include":t.crossorigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function i(t){if(t.ep)return;t.ep=!0;const e=o(t);fetch(t.href,e)}};h();const m=p('<table class="table-auto"><thead><tr><th>Operation</th><th>From</th><th>To</th></tr></thead><tbody></tbody></table>'),y=p("<tr><td></td><td></td><td></td></tr>"),g=d=>{const r=Array.from(d.operations,([o,i])=>({name:o,value:i}));return(()=>{const o=m.cloneNode(!0),i=o.firstChild,t=i.nextSibling;return c(t,a(f,{each:r,children:e=>(()=>{const n=y.cloneNode(!0),s=n.firstChild,u=s.nextSibling,l=u.nextSibling;return c(s,()=>e.name),c(u,()=>e.value.from),c(l,()=>e.value.to),n})()})),o})()};class ${add(r,o){return r+o}buildGraph(r,o){const i=new Map;let t=1;for(const e of r){const n=this.findFrom(e,i),s=this.findTo(e,r,i,t,o);s>t&&t++,i.set(`${e.activity}`,{from:n,to:s})}return i}findFrom(r,o){if(r.previous.length===0)return 1;{const i=o.get(r.previous[0]);return i?i?.to:-1}}findTo(r,o,i,t,e){if(t>=e)return e;if(r.previous.length===0)return++t;{const n=o.indexOf(r),s=o.slice(n).find(u=>u.previous.includes(r.activity));if(s===void 0||s.previous.length===1)return++t;{const u=s?.previous[0],l=i.get(u);return l?l?.to:++t}}}}const b=p("<div><h1>Wprowad\u017A dane</h1></div>"),_=()=>b.cloneNode(!0),F=p('<div class="p-8 columns-2"></div>');function C(){const d=new $,r=[{activity:"A",previous:[],duration:3},{activity:"B",previous:[],duration:4},{activity:"C",previous:[],duration:6},{activity:"D",previous:["B"],duration:3},{activity:"E",previous:["A"],duration:9},{activity:"F",previous:["A"],duration:1},{activity:"G",previous:["B"],duration:4},{activity:"H",previous:["C","D"],duration:5},{activity:"I",previous:["C","D"],duration:4},{activity:"J",previous:["E"],duration:3},{activity:"K",previous:["F","G","H"],duration:6},{activity:"L",previous:["F","G","H"],duration:3},{activity:"M",previous:["I"],duration:6},{activity:"N",previous:["J","K"],duration:9}];return(()=>{const o=F.cloneNode(!0);return c(o,a(_,{}),null),c(o,a(g,{get operations(){return d.buildGraph(r,9)}}),null),o})()}v(()=>a(C,{}),document.getElementById("root"));
